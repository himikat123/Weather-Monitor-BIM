String fw = "3.0";
char ssid[32] = "";
char password[32] = "";
String url;
int rssi;
char text_buf[255];
String httpData;
bool sending_flag = true;
//String js_data;
//bool js_complete=false;
bool ds_upd = false;
//bool APmode=false;

struct config_struct{
  char          ap_ssid[32] = "OutsideSensor";
  char          ap_pass[32] = "1234567899";
  String        ap_ip = "192.168.4.1";
  String        ap_mask = "255.255.255.0";
  String        latitude = "0";
  String        longitude = "0";
  int           chnl = 1;
  int           hide = 0;
  uint8_t       lang = 0;
  int           typ;
  String        ip;
  String        mask;
  String        gateway;
  String        dns1;
  String        dns2;
  bool          narod;
  bool          thingspeak;
  String        wr_key;
  unsigned long ch_id;
  bool          mqtt;
  char          mqtt_server[40];
  uint16_t      mqtt_port;
  char          mqtt_login[40];
  char          mqtt_pass[40];
  String        mdns;
  int           k;
  bool          ac;
  int           temp[3];
  int           pres[2];
  int           hum[2];
  int           light;
  int           period;
  float         uMin;
  float         uMax;
  uint8_t       f1;
  uint8_t       f2;
  uint8_t       f3;
  uint8_t       f4;
  uint8_t       f5;
  uint8_t       f6;
  uint8_t       f7;
  uint8_t       f8;
  float         t_cor;
  float         p_cor;
  float         h_cor;
  float         l_cor;
  float         ti_cor;
  float         pi_cor;
  float         hi_cor;
  float         te_cor;
  uint8_t       t_unt;
  uint8_t       p_unt;
  uint8_t       ti_unt;
  uint8_t       pi_unt;
  uint8_t       te_unt;
};
config_struct config;

struct{
  uint8_t num;
  String ssid[10];
  String pass[10];
} ssids;

struct sens_data{
  String      fw;
  float       temp_out;
  float       temp_in;
  float       temp_extra;
  float       hum_out;
  float       hum_in;
  float       pres_out;
  float       pres_in;
  float       light;
  uint16_t    adc;   
  float       uBat;
  uint8_t     bat_level;
  bool        mode;
  bool        bme1Detected = false;
  bool        bme2Detected = false;
  bool        bmp1Detected = false;
  bool        bmp2Detected = false;
  bool        bmp180Detected = false;
  bool        dhtDetected = false;
  bool        shtDetected = false;
  bool        max44Detected = false;
  bool        bhDetected = false;
  uint8_t     dsDetected = 0;
};
sens_data sensors;

void mqtt_incomming(char* topic,byte* payload,unsigned int length);
void updt();
void snd();
void sending();
void sendToNarodmon();
void sendToThingSpeak();
void sendToMQTT();
void connectToWiFi();
int viewRSSI(String ssid);
void read_eeprom(void);
void led(bool r,bool g,bool b);
void is_settings(void);
void BatteryLevel(void);
void sensors_init(void);
float get_temp(uint8_t s);
float get_pres(uint8_t s);
float get_hum(uint8_t s);
static signed long get_light(void);
String getContentType(String filename);
bool handleFileRead(String path);
bool FileRead(String path);
void handleFileUpload();
void web_settings(void);
